---
import Layout from "../layouts/Layout.astro";
---

<Layout title="EQRng.com - Class Image Test" currentPage="">
    <div class="max-w-6xl mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-white mb-6 text-center">
            EverQuest Class Image Mapping Test
        </h1>

        <div
            class="bg-slate-800 rounded-lg shadow-xl border border-slate-600/20 p-6 mb-8"
        >
            <h2 class="text-xl font-bold text-white mb-4">API Test</h2>
            <div class="flex gap-4 mb-4">
                <button
                    id="test-random-class"
                    class="bg-purple-600 hover:bg-purple-500 text-white font-medium py-2 px-4 rounded transition-colors"
                >
                    Test Random Class API
                </button>
                <button
                    id="test-random-race-class"
                    class="bg-blue-600 hover:bg-blue-500 text-white font-medium py-2 px-4 rounded transition-colors"
                >
                    Test Random Race + Class API
                </button>
            </div>
            <div
                id="api-result"
                class="bg-slate-700 rounded p-4 font-mono text-sm text-slate-300"
            >
                Click a button to test the API...
            </div>
        </div>

        <div
            class="bg-slate-800 rounded-lg shadow-xl border border-slate-600/20 p-6"
        >
            <h2 class="text-xl font-bold text-white mb-6">
                All Classes with Images
            </h2>
            <div
                id="class-grid"
                class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6"
            >
                <!-- Classes will be populated by JavaScript -->
            </div>
        </div>
    </div>

    <script>
        /**
         * Maps EverQuest class names to their corresponding image filenames
         * This is the same function used in class.astro
         */
        function getClassImagePath(className) {
            const classImageMap = {
                Warrior: "warrior.png",
                Cleric: "cleric.png",
                Paladin: "paladin.png",
                Ranger: "ranger.png",
                "Shadow Knight": "shadowknight.png",
                Druid: "druid.png",
                Monk: "monk.png",
                Bard: "bard.png",
                Rogue: "rogue.png",
                Shaman: "shaman.png",
                Necromancer: "necromancer.png",
                Wizard: "wizard.png",
                Magician: "magician.png",
                Enchanter: "enchanter.png",
                Beastlord: "beastlord.png",
                Berserker: "warrior.png", // Fallback: no berserker.png exists
            };
            return classImageMap[className] || "warrior.png";
        }

        // All EverQuest classes from the backend
        const allClasses = [
            "Warrior",
            "Cleric",
            "Paladin",
            "Ranger",
            "Shadow Knight",
            "Druid",
            "Monk",
            "Bard",
            "Rogue",
            "Shaman",
            "Necromancer",
            "Wizard",
            "Magician",
            "Enchanter",
            "Beastlord",
            "Berserker",
        ];

        function createClassCard(className) {
            const imagePath = getClassImagePath(className);
            const fullImagePath = `/assets/images/classes/${imagePath}`;

            return `
                <div class="bg-slate-700 border border-purple-600/30 rounded-lg p-4 text-center">
                    <div class="mb-3">
                        <img src="${fullImagePath}"
                             alt="${className}"
                             class="w-16 h-16 mx-auto rounded-lg border-2 border-purple-500/30 object-cover"
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                        />
                        <div class="w-16 h-16 mx-auto rounded-lg border-2 border-red-500/50 bg-red-900/30 hidden items-center justify-center">
                            <span class="text-red-400 text-xs">❌</span>
                        </div>
                    </div>
                    <div class="text-purple-400 font-bold mb-1">${className}</div>
                    <div class="text-slate-400 text-xs font-mono">${imagePath}</div>
                </div>
            `;
        }

        function populateClassGrid() {
            const grid = document.getElementById("class-grid");
            if (grid) {
                grid.innerHTML = allClasses.map(createClassCard).join("");
            }
        }

        async function testRandomClass() {
            const resultDiv = document.getElementById("api-result");
            if (!resultDiv) return;

            resultDiv.innerHTML =
                '<span class="text-yellow-400">Testing random class API...</span>';

            try {
                const response = await fetch("/random_class");
                if (!response.ok) throw new Error(`HTTP ${response.status}`);

                const className = await response.json();
                const imagePath = getClassImagePath(className);

                resultDiv.innerHTML = `
                    <div class="text-green-400">✅ Success!</div>
                    <div><strong>API Response:</strong> "${className}"</div>
                    <div><strong>Mapped Image:</strong> ${imagePath}</div>
                    <div><strong>Full Path:</strong> /assets/images/classes/${imagePath}</div>
                `;
            } catch (error) {
                resultDiv.innerHTML = `<span class="text-red-400">❌ Error: ${error.message}</span>`;
            }
        }

        async function testRandomRaceClass() {
            const resultDiv = document.getElementById("api-result");
            if (!resultDiv) return;

            resultDiv.innerHTML =
                '<span class="text-yellow-400">Testing random race + class combo...</span>';

            try {
                // First get a random race
                const raceResponse = await fetch("/random_race");
                if (!raceResponse.ok)
                    throw new Error(`Race API HTTP ${raceResponse.status}`);
                const raceData = await raceResponse.json();
                const race = raceData.name; // Extract the race name from the response object

                // Then get a class for that race
                const classResponse = await fetch(
                    `/random_class?race=${encodeURIComponent(race)}`,
                );
                if (!classResponse.ok)
                    throw new Error(`Class API HTTP ${classResponse.status}`);
                const className = await classResponse.json();

                const imagePath = getClassImagePath(className);

                resultDiv.innerHTML = `
                    <div class="text-green-400">✅ Success!</div>
                    <div><strong>Race:</strong> "${race}"</div>
                    <div><strong>Compatible Class:</strong> "${className}"</div>
                    <div><strong>Mapped Image:</strong> ${imagePath}</div>
                    <div><strong>Full Path:</strong> /assets/images/classes/${imagePath}</div>
                `;
            } catch (error) {
                resultDiv.innerHTML = `<span class="text-red-400">❌ Error: ${error.message}</span>`;
            }
        }

        // Initialize the page
        document.addEventListener("DOMContentLoaded", function () {
            populateClassGrid();

            const randomClassBtn = document.getElementById("test-random-class");
            const randomRaceClassBtn = document.getElementById(
                "test-random-race-class",
            );

            if (randomClassBtn) {
                randomClassBtn.addEventListener("click", testRandomClass);
            }

            if (randomRaceClassBtn) {
                randomRaceClassBtn.addEventListener(
                    "click",
                    testRandomRaceClass,
                );
            }
        });
    </script>
</Layout>
